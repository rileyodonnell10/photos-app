{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rileyodonnell/challenge-riley/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaUserCircle, FaCheckCircle, FaTimes, FaShareAlt } from \"react-icons/fa\";\n\nfunction App() {\n  _s();\n\n  const [photos, setPhotos] = useState([]);\n  const [selectedPhotos, setSelectedPhotos] = useState([]);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/photos\").then(res => res.json()).then(data => {\n      let unique = [...new Map(data.photos.map(photo => [photo[\"url\"], photo])).values()];\n      setPhotos(unique);\n    });\n  }, []);\n\n  const handleSelect = id => {\n    let updatedList = selectedPhotos;\n\n    if (updatedList.includes(id)) {\n      updatedList = updatedList.filter(item => item !== id);\n      setSelectedPhotos(updatedList);\n      setCount(count - 1);\n    } else {\n      updatedList.push(id);\n      setSelectedPhotos(updatedList);\n      setCount(count + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [photos && photos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photoGrid\",\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Photo, {\n        url: photo.url,\n        onSelect: () => {\n          handleSelect(photo.id);\n        }\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), console.log(selectedPhotos), /*#__PURE__*/_jsxDEV(Footer, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G42teDQpGyFOod+vC6cxSY6Q5yA=\");\n\n_c = App;\n\nconst Photo = ({\n  url,\n  onSelect\n}) => {\n  _s2();\n\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    setSelected(!selected);\n    onSelect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    onClick: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"photo\",\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n      className: \"check\",\n      color: selected ? \"#1a73e8\" : \"#d3e6f7\",\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Photo, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c2 = Photo;\nPhoto.propTypes = {\n  url: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nconst Footer = ({\n  count\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footerBar\",\n    children: [count > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerSection left\",\n      children: [/*#__PURE__*/_jsxDEV(FaTimes, {\n        color: \"rgb(120,136,150)\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [count, \" Selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerSection right\",\n      children: [count > 0 && /*#__PURE__*/_jsxDEV(FaShareAlt, {\n        color: \"rgb(120,136,150)\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(FaUserCircle, {\n        className: \"userIcon\",\n        color: \"rgb(120,136,150)\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Footer;\nFooter.propTypes = {\n  count: PropTypes.number.isRequired\n};\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Photo\");\n$RefreshReg$(_c3, \"Footer\");","map":{"version":3,"sources":["/Users/rileyodonnell/challenge-riley/src/App.js"],"names":["React","useEffect","useState","PropTypes","FaUserCircle","FaCheckCircle","FaTimes","FaShareAlt","App","photos","setPhotos","selectedPhotos","setSelectedPhotos","count","setCount","fetch","then","res","json","data","unique","Map","map","photo","values","handleSelect","id","updatedList","includes","filter","item","push","length","url","console","log","Photo","onSelect","selected","setSelected","propTypes","string","isRequired","func","Footer","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,OAHF,EAIEC,UAJF,QAKO,gBALP;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAIC,MAAM,GAAG,CACX,GAAG,IAAIC,GAAJ,CACDF,IAAI,CAACV,MAAL,CAAYa,GAAZ,CAAiBC,KAAD,IAAW,CAACA,KAAK,CAAC,KAAD,CAAN,EAAeA,KAAf,CAA3B,CADC,EAEDC,MAFC,EADQ,CAAb;AAKAd,MAAAA,SAAS,CAACU,MAAD,CAAT;AACD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMK,YAAY,GAAIC,EAAD,IAAQ;AAC3B,QAAIC,WAAW,GAAGhB,cAAlB;;AACA,QAAIgB,WAAW,CAACC,QAAZ,CAAqBF,EAArB,CAAJ,EAA8B;AAC5BC,MAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,KAAKJ,EAAtC,CAAd;AACAd,MAAAA,iBAAiB,CAACe,WAAD,CAAjB;AACAb,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,KAJD,MAIO;AACLc,MAAAA,WAAW,CAACI,IAAZ,CAAiBL,EAAjB;AACAd,MAAAA,iBAAiB,CAACe,WAAD,CAAjB;AACAb,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGJ,MAAM,IAAIA,MAAM,CAACuB,MAAP,GAAgB,CAA1B,iBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGvB,MAAM,CAACa,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AAEE,QAAA,GAAG,EAAEA,KAAK,CAACU,GAFb;AAGE,QAAA,QAAQ,EAAE,MAAM;AACdR,UAAAA,YAAY,CAACF,KAAK,CAACG,EAAP,CAAZ;AACD;AALH,SACOH,KAAK,CAACG,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcGQ,OAAO,CAACC,GAAR,CAAYxB,cAAZ,CAdH,eAeE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlDQL,G;;KAAAA,G;;AAoDT,MAAM4B,KAAK,GAAG,CAAC;AAAEH,EAAAA,GAAF;AAAOI,EAAAA;AAAP,CAAD,KAAuB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMuB,YAAY,GAAG,MAAM;AACzBc,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAD,IAAAA,QAAQ;AACT,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEZ,YAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEQ;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,KAAK,EAAEK,QAAQ,GAAG,SAAH,GAAe,SAFhC;AAGE,MAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBD;;IAAMF,K;;MAAAA,K;AAmBNA,KAAK,CAACI,SAAN,GAAkB;AAChBP,EAAAA,GAAG,EAAE9B,SAAS,CAACsC,MAAV,CAAiBC,UADN;AAEhBL,EAAAA,QAAQ,EAAElC,SAAS,CAACwC,IAAV,CAAeD;AAFT,CAAlB;;AAKA,MAAME,MAAM,GAAG,CAAC;AAAE/B,EAAAA;AAAF,CAAD,KAAe;AAC5B,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGA,KAAK,GAAG,CAAR,iBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,kBAAf;AAAkC,QAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAMA,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,iBACGA,KAAK,GAAG,CAAR,iBAAa,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,kBAAlB;AAAqC,QAAA,IAAI,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,cADhB,eAEE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAC,kBAAzC;AAA4D,QAAA,IAAI,EAAE;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;MAAM+B,M;AAiBNA,MAAM,CAACJ,SAAP,GAAmB;AACjB3B,EAAAA,KAAK,EAAEV,SAAS,CAAC0C,MAAV,CAAiBH;AADP,CAAnB;AAIA,eAAelC,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FaUserCircle,\n  FaCheckCircle,\n  FaTimes,\n  FaShareAlt,\n} from \"react-icons/fa\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [selectedPhotos, setSelectedPhotos] = useState([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/photos\")\n      .then((res) => res.json())\n      .then((data) => {\n        let unique = [\n          ...new Map(\n            data.photos.map((photo) => [photo[\"url\"], photo])\n          ).values(),\n        ];\n        setPhotos(unique);\n      });\n  }, []);\n\n  const handleSelect = (id) => {\n    let updatedList = selectedPhotos;\n    if (updatedList.includes(id)) {\n      updatedList = updatedList.filter((item) => item !== id);\n      setSelectedPhotos(updatedList);\n      setCount(count - 1);\n    } else {\n      updatedList.push(id);\n      setSelectedPhotos(updatedList);\n      setCount(count + 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {photos && photos.length > 0 && (\n        <div className=\"photoGrid\">\n          {photos.map((photo) => (\n            <Photo\n              key={photo.id}\n              url={photo.url}\n              onSelect={() => {\n                handleSelect(photo.id);\n              }}\n            />\n          ))}\n        </div>\n      )}\n      {console.log(selectedPhotos)}\n      <Footer count={count} />\n    </div>\n  );\n}\n\nconst Photo = ({ url, onSelect }) => {\n  const [selected, setSelected] = useState(false);\n  const handleSelect = () => {\n    setSelected(!selected);\n    onSelect();\n  };\n\n  return (\n    <div className=\"photoContainer\" onClick={handleSelect}>\n      <img className=\"photo\" src={url} />\n      <FaCheckCircle\n        className=\"check\"\n        color={selected ? \"#1a73e8\" : \"#d3e6f7\"}\n        size={30}\n      />\n    </div>\n  );\n};\n\nPhoto.propTypes = {\n  url: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nconst Footer = ({ count }) => {\n  return (\n    <div className=\"footerBar\">\n      {count > 0 && (\n        <div className=\"footerSection left\">\n          <FaTimes color=\"rgb(120,136,150)\" size={30} />\n          <div>{count} Selected</div>\n        </div>\n      )}\n      <div className=\"footerSection right\">\n        {count > 0 && <FaShareAlt color=\"rgb(120,136,150)\" size={30} />}\n        <FaUserCircle className=\"userIcon\" color=\"rgb(120,136,150)\" size={30} />\n      </div>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}