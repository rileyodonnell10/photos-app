{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rileyodonnell/challenge-riley/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction App() {\n  _s();\n\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/photos\").then(res => res.json()).then(data => {\n      let unique = [...new Map(data.photos.map(item => [item['url'], item])).values()];\n      setPhotos(unique);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: photos && photos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photoGrid\",\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Photo, {\n        url: photo.url\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rNJeiEBnoDDbCNHI2MVPxiP450E=\");\n\n_c = App;\n\nconst Photo = ({\n  url\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"photo\",\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Photo;\nPhoto.propTypes = {\n  url: PropTypes.string.isRequired\n};\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Photo\");","map":{"version":3,"sources":["/Users/rileyodonnell/challenge-riley/src/App.js"],"names":["React","useEffect","useState","PropTypes","App","photos","setPhotos","fetch","then","res","json","data","unique","Map","map","item","values","length","photo","url","id","Photo","propTypes","string","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAIC,MAAM,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQF,IAAI,CAACN,MAAL,CAAYS,GAAZ,CAAgBC,IAAI,IAC7C,CAACA,IAAI,CAAC,KAAD,CAAL,EAAcA,IAAd,CADyB,CAAR,EACKC,MADL,EAAJ,CAAb;AAEAV,MAAAA,SAAS,CAACM,MAAD,CAAT;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGP,MAAM,IAAIA,MAAM,CAACY,MAAP,GAAgB,CAA1B,iBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGZ,MAAM,CAACS,GAAP,CAAYI,KAAD,iBACV,QAAC,KAAD;AAAsB,QAAA,GAAG,EAAEA,KAAK,CAACC;AAAjC,SAAYD,KAAK,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxBQhB,G;;KAAAA,G;;AA0BT,MAAMiB,KAAK,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAa;AACzB,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAME,K;AAQNA,KAAK,CAACC,SAAN,GAAkB;AAChBH,EAAAA,GAAG,EAAEhB,SAAS,CAACoB,MAAV,CAAiBC;AADN,CAAlB;AAIA,eAAepB,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/photos\")\n      .then((res) => res.json())\n      .then((data) => {\n        let unique = [...new Map(data.photos.map(item =>\n        [item['url'], item])).values()];\n        setPhotos(unique);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {photos && photos.length > 0 && (\n        <div className=\"photoGrid\">\n          {photos.map((photo) => (\n            <Photo key={photo.id} url={photo.url} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst Photo = ({ url }) => {\n  return (\n    <div className=\"photoContainer\">\n      <img className=\"photo\" src={url} />\n    </div>\n  );\n};\n\nPhoto.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}