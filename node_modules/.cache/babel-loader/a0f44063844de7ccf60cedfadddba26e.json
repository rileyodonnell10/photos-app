{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rileyodonnell/challenge-riley/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaUserCircle, FaCheckCircle } from \"react-icons/fa\";\n\nfunction App() {\n  _s();\n\n  const [photos, setPhotos] = useState([]);\n  const [selectedPhotos, setSelectedPhotos] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/photos\").then(res => res.json()).then(data => {\n      let unique = [...new Map(data.photos.map(photo => [photo[\"url\"], photo])).values()];\n      setPhotos(unique);\n    });\n  }, []);\n\n  const handleSelect = id => {\n    if (!selectedPhotos.includes(id)) {\n      selectedPhotos.push(id);\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [photos && photos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photoGrid\",\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Photo, {\n        url: photo.url,\n        onSelect: () => {\n          handleSelect(photo.id);\n        }\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      count: selectedPhotos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"93/48qnP79wv8d/kFDIKIJ15rnI=\");\n\n_c = App;\n\nconst Photo = ({\n  url,\n  onSelect\n}) => {\n  _s2();\n\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    setSelected(!selected);\n    onSelect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    onClick: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"photo\",\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n      className: \"check\",\n      color: selected ? \"#1a73e8\" : \"#d3e6f7\",\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Photo, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c2 = Photo;\nPhoto.propTypes = {\n  url: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nconst Footer = ({\n  count\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footerBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaUserCircle, {\n      className: \"userIcon\",\n      color: \"rgb(120,136,150)\",\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Footer;\nFooter.propTypes = {\n  count: PropTypes.number.isRequired\n};\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Photo\");\n$RefreshReg$(_c3, \"Footer\");","map":{"version":3,"sources":["/Users/rileyodonnell/challenge-riley/src/App.js"],"names":["React","useEffect","useState","PropTypes","FaUserCircle","FaCheckCircle","App","photos","setPhotos","selectedPhotos","setSelectedPhotos","fetch","then","res","json","data","unique","Map","map","photo","values","handleSelect","id","includes","push","length","url","Photo","onSelect","selected","setSelected","propTypes","string","isRequired","func","Footer","count","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaUserCircle, FaCheckCircle } from \"react-icons/fa\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [selectedPhotos, setSelectedPhotos] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/photos\")\n      .then((res) => res.json())\n      .then((data) => {\n        let unique = [\n          ...new Map(\n            data.photos.map((photo) => [photo[\"url\"], photo])\n          ).values(),\n        ];\n        setPhotos(unique);\n      });\n  }, []);\n\n  const handleSelect = (id) => {\n    if (!selectedPhotos.includes(id)) {\n      selectedPhotos.push(id);\n    } else {\n\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {photos && photos.length > 0 && (\n        <div className=\"photoGrid\">\n          {photos.map((photo) => (\n            <Photo\n              key={photo.id}\n              url={photo.url}\n              onSelect={() => {\n                handleSelect(photo.id);\n              }}\n            />\n          ))}\n        </div>\n      )}\n      <Footer count={selectedPhotos.length} />\n    </div>\n  );\n}\n\nconst Photo = ({ url, onSelect }) => {\n  const [selected, setSelected] = useState(false);\n  const handleSelect = () => {\n    setSelected(!selected);\n    onSelect();\n  };\n\n  return (\n    <div className=\"photoContainer\" onClick={handleSelect}>\n      <img className=\"photo\" src={url} />\n      <FaCheckCircle\n        className=\"check\"\n        color={selected ? \"#1a73e8\" : \"#d3e6f7\"}\n        size={30}\n      />\n    </div>\n  );\n};\n\nPhoto.propTypes = {\n  url: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nconst Footer = ({ count }) => {\n  return (\n    <div className=\"footerBar\">\n      <div>{count}</div>\n      <FaUserCircle className=\"userIcon\" color=\"rgb(120,136,150)\" size={30} />\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}